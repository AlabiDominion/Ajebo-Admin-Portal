@model ShiftSolutions.web.Application.Org.StaffListPageVm
@{
    ViewData["Title"] = "All Staff";
}

<div class="pageTitleBox  d-sm-flex align-items-center justify-content-between">
    <h4>All Staff</h4>
    <p>Staff <span>></span> <span>All Staff</span></p>
</div>

<div class="p-4 mt-2">
    <div class="card">
        <div class="card-body">
            <div class="row g-2">
                <div class="col-sm-4">
                    <form asp-action="ListStaff" asp-controller="Staff" method="get">
                        <div class="search-box">
                            <input type="text" name="q" value="@Model.Q"
                                   class="form-control" id="searchMemberList"
                                   placeholder="Search name, email or phone..." />
                            <i class="ri-search-line search-icon"></i>
                        </div>
                    </form>
                </div>

                <div class="col-sm-auto ms-auto">
                    <div class="list-grid-nav hstack gap-1">
                        <button type="button" id="list-view-button"
                                class="btn btn-soft-info nav-link btn-icon fs-14 active filter-button"
                                title="List view">
                            <i class="ri-list-unordered"></i>
                        </button>

                        <a asp-controller="Staff" asp-action="NewStaff" class="btn btn-success addMembers-modal">
                            <i class="ri-add-fill me-1 align-bottom"></i> Add Members
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table align-middle mb-0">
            <thead class="table-light">
                <tr>
                    <th scope="col">Staff</th>
                    <th scope="col">Role</th>
                    <th scope="col">Department</th>
                    <th scope="col">Email</th>
                    <th scope="col">Phone</th>
                    <th scope="col">Status</th>
                    <th scope="col">Visit</th>
                </tr>
            </thead>
            <tbody id="staffTableBody">
                @if (Model.Items?.Any() == true)
                {
                    foreach (var s in Model.Items)
                    {
                        <tr data-staff='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(new
                            {
                                id = s.Id,
                                name = s.FullName,
                                role = s.RoleName,
                                dept = s.DepartmentName,
                                email = s.Email,
                                phone = s.Phone,
                                status = s.Status,
                                avatar = s.AvatarUrl
                            }))'>
                            <td>
                                <div class="d-flex gap-2 align-items-center">
                                    <div class="flex-shrink-0">
                                        <img src="@s.AvatarUrl" alt="" class="avatar-xs rounded-circle" />
                                    </div>
                                    <div class="flex-grow-1">
                                        @s.FullName
                                    </div>
                                </div>
                            </td>
                            <td>@s.RoleName</td>
                            <td>@s.DepartmentName</td>
                            <td>@s.Email</td>
                            <td>@s.Phone</td>
                            <td>@s.Status</td>
                            <td>
                                <div class="hstack flex-wrap gap-2 mb-3 mb-lg-0">
                                    <button type="button" class="btn btn-outline-success btn-border btn-visit">Visit</button>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted py-4">
                            No staff found.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="Footer flex justify-center">
    <p>
        <script>document.write(new Date().getFullYear())</script>
        &copy; Ajebo
    </p>
</div>

<!-- Pop up (data-driven now) -->
<div id="StaffProfilePopUP" class="StaffProfile hidden">
    <div class="StaffProfileInner">
        <div class="SPI1">
            <img id="spAvatar" src='@Url.Content("~/images/users/avatar-3.jpg")' alt="" />
            <div class="SPI11">
                <h2 id="spName">—</h2>
                <p id="spRole" class="mb-0">—</p>
                <p id="spDept" class="mb-0">—</p>
            </div>
        </div>
        <p>
            <i class='bx bxs-envelope'></i>
            <span id="spEmail">—</span>
        </p>
        <p>
            <i class='bx bx-phone-call'></i>
            <span id="spPhone">—</span>
        </p>
        <div>
            <a id="OpenStaffEdit" class="btn btn-primary btn-border" href="javascript:void(0)">Edit Staff</a>
            <button id="deleteStaffBtn" class="btn btn-outline-danger btn-border">Delete Staff</button>
            <button id="closeProfile" class="btn btn-soft-dark btn-border">Close</button>
        </div>
    </div>

    
    <div class="StaffProfileInner2">
        <h3>Merchants</h3>
        <table class="table">
            <thead>
                <tr><th>Merchant</th><th>City</th><th>Apartments</th><th>Status</th><th>Created</th></tr>
            </thead>
            <tbody id="spMerchantsBody">
                <tr><td colspan="5" class="muted">Loading…</td></tr>
            </tbody>
        </table>
    </div>

</div>


<div id="StaffEditpage" class="StaffProfileEdit hidden">
    <div class="spe-card">
        <h1 class="spe-title">Edit Staff</h1>

        <form class="spe-form" action="#" method="post" autocomplete="off">
            <div class="spe-avatar">
                <img id="editAvatar" src="https://images.unsplash.com/photo-1544723795-3fb6469f5b39?q=80&w=240&h=240&fit=crop" alt="Staff photo">
            </div>

            <div class="spe-grid">
                <div class="spe-field">
                    <label for="firstName">First Name</label>
                    <input id="firstName" name="FirstName" type="text">
                </div>

                <div class="spe-field">
                    <label for="lastName">Last Name</label>
                    <input id="lastName" name="LastName" type="text">
                </div>

                <div class="spe-field">
                    <label for="email">Email Address</label>
                    <input id="email" name="Email" type="email" autocomplete="new-password">
                </div>

                <div class="spe-field">
                    <label for="phone">Phone Number</label>
                    <input id="phone" name="Phone" type="tel">
                </div>

                <div class="spe-field">
                    <label for="department">Department</label>
                    <div class="spe-select">
                        <select id="department" name="Department"></select>
                    </div>
                </div>

                <div class="spe-field">
                    <label for="role">Role</label>
                    <div class="spe-select">
                        <select id="role" name="Role"></select>
                    </div>
                </div>

                <div class="spe-field">
                    <label for="Status">Status</label>
                    <div class="spe-select">
                        <select id="statusSelect" name="Status">
                            <option>Active</option>
                            <option>Inactive</option>
                            <option>On Leave</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="spe-actions">
                <button type="submit" class="spe-btn spe-btn-primary">Save Changes</button>
                <a id="CloseEdit" href="#" class="spe-btn spe-btn-ghost" role="button">Cancel</a>
            </div>
        </form>
    </div>
</div>

<!-- Delete Confirmation Modal (kept as-is, action can be updated to real route) -->
<div class="dc-overlay" id="dcOverlay" aria-hidden="true">
    <div class="dc-modal" role="dialog" aria-modal="true" aria-labelledby="dcTitle" aria-describedby="dcDesc">
        <button class="dc-close" type="button" aria-label="Close" id="dcClose">×</button>
        <div class="dc-icon">
            <svg viewBox="0 0 24 24" width="36" height="36" aria-hidden="true">
                <path d="M12 9v4m0 4h.01M10.29 3.86L1.82 18a2 2 0 001.71 3h16.94a2 2 0 001.71-3L13.71 3.86a2 2 0 00-3.42 0z"
                      fill="none" stroke="#ef4444" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
            </svg>
        </div>

        <h3 class="dc-title" id="dcTitle">Delete Staff?</h3>
        <p class="dc-desc" id="dcDesc">
            This action cannot be undone. The staff member and any related assignments will be removed.
        </p>

        <form id="deleteForm" action="/Staff/Delete/0" method="post" class="dc-actions">
            @Html.AntiForgeryToken()
            <input type="hidden" name="StaffId" id="deleteStaffId" value="0" />
            <button type="submit" class="dc-btn dc-btn-danger" id="dcConfirm">Yes, Delete</button>
            <button type="button" class="dc-btn dc-btn-ghost" id="dcCancel">Cancel</button>
        </form>
    </div>
</div>
<style>
    .merchantCell {
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .merchantCell img {
            width: 36px;
            height: 36px;
            border-radius: 999px;
            object-fit: cover;
            border: 1px solid #e5e7eb;
        }

        .merchantCell .m-name {
            font-weight: 800
        }

        .merchantCell .m-id {
            font-size: 12px;
            color: #64748b
        }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        async function loadStaffMerchants(staffId) {
            const tbody = document.getElementById('spMerchantsBody');
            tbody.innerHTML = `<tr><td colspan="5" class="muted">Loading…</td></tr>`;

            const params = new URLSearchParams({
                page: 1,
                pageSize: 50,
                sort: 'created_desc'
                // you can also pass search/city/status if you add UI for it
            });

            const res = await fetch(`/api/staff/${staffId}/merchants?` + params.toString(), { cache: 'no-store' });
            if (!res.ok) {
                tbody.innerHTML = `<tr><td colspan="5" class="muted">Failed to load.</td></tr>`;
                return;
            }
            const data = await res.json();
            const items = data.items || [];

            const chip = (status) => {
                const s = String(status || '').toLowerCase();
                let cls = 'chip chip-open';
                if (s === 'approved') cls = 'chip chip-paid';
                else if (s === 'pending') cls = 'chip chip-pending';
                else if (s === 'declined') cls = 'chip chip-failed';
                return `<span class="${cls}">${status || '—'}</span>`;
            };

            const rows = items.map(m => {
                const url = `/Merchant/Profile?id=${encodeURIComponent(m.agentId)}`;
                return `<tr class="DTClickable" data-href="${url}">
              <td>
                <div class="merchantCell">
                          <img src="${m.avatar || '/images/users/avatar-5.jpg'}" alt="">
                  <div>
                    <div class="m-name">${m.displayName || m.companyName || '—'}</div>
                    <div class="m-id muted">${m.agentId || ''}</div>
                  </div>
                </div>
              </td>
              <td>${m.city || '—'}</td>
              <td>${m.apartmentsCount ?? 0}</td>
              <td>${chip(m.approvalStatus)}</td>
              <td class="muted">${(m.createdAt || '').substring(0, 10)}</td>
            </tr>`;
            }).join('');

            tbody.innerHTML = rows || `<tr><td colspan="5" class="muted">No merchants assigned.</td></tr>`;

            // row click → profile
            tbody.querySelectorAll('.DTClickable').forEach(tr => {
                tr.addEventListener('click', (e) => {
                    const url = tr.getAttribute('data-href');
                    if (url) window.location.href = url;
                });
            });
        }

        // Example: when opening the staff popup elsewhere
        // openStaffProfile(staff) {
        //   ...fill name/email...
        //   loadStaffMerchants(staff.id);
        // }
    </script>

    <script>
        // --- Search submit on Enter ---
        document.getElementById('searchMemberList')?.addEventListener('keydown', function (e) {
            if (e.key === 'Enter') e.target.closest('form').submit();
        });

        // --- Elements
        const tableBody = document.getElementById('staffTableBody');
        const popup = document.getElementById('StaffProfilePopUP');
        const editPanel = document.getElementById('StaffEditpage');

        // Popup fields
        const spAvatar = document.getElementById('spAvatar');
        const spName = document.getElementById('spName');
        const spRole = document.getElementById('spRole');
        const spDept = document.getElementById('spDept');
        const spEmail = document.getElementById('spEmail');
        const spPhone = document.getElementById('spPhone');

        // Delete modal
        const overlay = document.getElementById('dcOverlay');
        const dcClose = document.getElementById('dcClose');
        const dcCancel = document.getElementById('dcCancel');
        const dcConfirm = document.getElementById('dcConfirm');
        const deleteForm = document.getElementById('deleteForm');
        const deleteStaffId = document.getElementById('deleteStaffId');

        // Inline edit fields (if you want to use the inline edit panel)
        const eFirst = document.getElementById('firstName');
        const eLast = document.getElementById('lastName');
        const eEmail = document.getElementById('email');
        const ePhone = document.getElementById('phone');
        const eDept = document.getElementById('department');
        const eRole = document.getElementById('role');
        const eStatus = document.getElementById('statusSelect');
        const eAvatar = document.getElementById('editAvatar');

        function show(el) { el?.classList.remove('hidden'); }
        function hide(el) { el?.classList.add('hidden'); }

        // === 2a) Delegate "Visit" button clicks (WORKING already) ===
        tableBody?.addEventListener('click', function (e) {
            const btn = e.target.closest('.btn-visit');
            if (!btn) return;

            const tr = btn.closest('tr');
            const data = JSON.parse(tr.getAttribute('data-staff'));

            // Fill popup
            spAvatar.src = data.avatar || '/images/users/avatar-3.jpg';
            spName.textContent = data.name || '—';
            spRole.textContent = data.role || '—';
            spDept.textContent = data.dept || '—';
            spEmail.textContent = data.email || '—';
            spPhone.textContent = data.phone || '—';

            // Prepare Delete action
            deleteStaffId.value = data.id || '0';
            deleteForm.setAttribute('action', '/Staff/Delete/' + (data.id || '0'));

            // Also stash the current staff id on the popup for Edit
            popup.dataset.staffId = data.id || '0';

            show(popup);
            loadStaffMerchants(data.id);
        });

        // === 2b) Delegate clicks INSIDE the popup (Close, Delete, Edit) ===
        popup?.addEventListener('click', function (e) {
            const closeBtn = e.target.closest('#closeProfile');
            const delBtn = e.target.closest('#deleteStaffBtn');
            const editBtn = e.target.closest('#OpenStaffEdit');

            if (closeBtn) {
                hide(popup);
                return;
            }

            if (delBtn) {
                openDelete();
                return;
            }

            if (editBtn) {
                
                const id = popup.dataset.staffId || '0';
                window.location.href = '/Staff/Edit/' + id;

                return;
            }
        });
        document.getElementById('CloseEdit')?.addEventListener('click', function (e) {
            e.preventDefault();
            hide(editPanel);
        });
        function openDelete() {
            overlay.classList.add('show');
            overlay.removeAttribute('aria-hidden');
            dcConfirm?.focus();
            document.body.style.overflow = 'hidden';
        }
        function closeDelete() {
            overlay.classList.remove('show');
            overlay.setAttribute('aria-hidden', 'true');
            document.body.style.overflow = '';
        }

        dcClose?.addEventListener('click', closeDelete);
        dcCancel?.addEventListener('click', closeDelete);
        overlay?.addEventListener('click', (e) => { if (e.target === overlay) closeDelete(); });
        document.addEventListener('keydown', (e) => { if (e.key === 'Escape' && overlay.classList.contains('show')) closeDelete(); });

        deleteForm?.addEventListener('submit', () => {
            dcConfirm.setAttribute('disabled', 'disabled');
            dcConfirm.textContent = 'Deleting…';
        });
    </script>
}

