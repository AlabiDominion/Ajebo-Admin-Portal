<!-- SETTLEMENTS / PAYOUTS – LIST -->

<div class="p-4">
    <div class="DashboardTableContainerE">
        <div class="DTH">
            <h5 class="mb-0">Settlements / Payouts</h5>
            <div class="flex gap-2">
                <button class="btn btn-soft-info" id="exportSettlements">Export CSV</button>
                <button class="btn btn-primary" id="openCreatePayout">Create Payout</button>
            </div>
        </div>

        <!-- Filters -->
        <div class="DTFilters">
            <div class="DTFilterRow">
                <div class="DTField">
                    <label>Search</label>
                    <input type="text" id="spQ" placeholder="Batch ID, merchant…">
                </div>

                <div class="DTField">
                    <label>Status</label>
                    <select id="spStatus">
                        <option value="">All</option>
                        <option>Open</option>
                        <option>Processing</option>
                        <option>Paid</option>
                        <option>Failed</option>
                        <option>Cancelled</option>
                    </select>
                </div>

                <div class="DTField">
                    <label>Merchant</label>
                    <input type="text" id="spMerchant" placeholder="e.g., Stellar Apartments">
                </div>

                <div class="DTField">
                    <label>From</label>
                    <input type="date" id="spFrom">
                </div>

                <div class="DTField">
                    <label>To</label>
                    <input type="date" id="spTo">
                </div>

                <div class="DTButtons">
                    <button type="button" class="btn btn-primary" id="spApply">Apply</button>
                    <button type="button" class="btn btn-light" id="spReset">Reset</button>
                </div>
            </div>
        </div>

        <!-- Table -->
        <div class="DTTableWrap">
            <table class="DTTable w-full">
                <thead>
                    <tr class="DTHMain">
                        <th>Batch ID</th>
                        <th>Merchants</th>
                        <th>Orders</th>
                        <th>Gross</th>
                        <th>Fees</th>
                        <th>Net Payable</th>
                        <th>Status</th>
                        <th>Created</th>
                        <th class="DTActionCol">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Example row -->
                    <tr class="DTClickable" data-href="/OpTransaction/BatchDetailes">
                        <td>SET-20250812-01</td>
                        <td>3</td>
                        <td>18</td>
                        <td class="mono">₦3,780,000</td>
                        <td class="mono">₦0</td>
                        <td class="mono"><strong>₦3,780,000</strong></td>
                        <td><span class="chip chip-paid">Paid</span></td>
                        <td class="muted">2025-08-12 16:05</td>
                        <td class="DTActionCol">
                            <div class="manual-dropdown">
                                <button class="icon-dot" data-dd-button aria-haspopup="true" aria-expanded="false">⋯</button>
                                <ul class="dd-menu">
                                    <li><a class="dd-item" href="/OpTransaction/BatchDetailes">View</a></li>
                                    <li><button class="dd-item">Download CSV</button></li>
                                    <li><button class="dd-item">Download Receipt</button></li>
                                </ul>
                            </div>
                        </td>
                    </tr>

                    <tr class="DTClickable" data-href="/OpTransaction/BatchDetailes">
                        <td>SET-20250810-02</td>
                        <td>1</td>
                        <td>7</td>
                        <td class="mono">₦1,190,000</td>
                        <td class="mono">₦0</td>
                        <td class="mono"><strong>₦1,190,000</strong></td>
                        <td><span class="chip chip-pending">Processing</span></td>
                        <td class="muted">2025-08-10 09:12</td>
                        <td class="DTActionCol">
                            <div class="manual-dropdown">
                                <button class="icon-dot" data-dd-button aria-haspopup="true" aria-expanded="false">⋯</button>
                                <ul class="dd-menu" role="menu">
                                    <li><a class="dd-item" href="/OpTransaction/BatchDetailes">View</a></li>
                                    <li><button class="dd-item">Mark as Paid</button></li>
                                    <li><button class="dd-item">Cancel Batch</button></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>


<!-- CREATE PAYOUT WIZARD -->
<div class="spw-overlay" id="spwOverlay" aria-hidden="true">
    <div class="spw-modal" role="dialog" aria-modal="true" aria-labelledby="spwTitle">
        <button class="spw-close" id="spwClose" aria-label="Close">×</button>

        <!-- Header -->
        <div class="spw-head">
            <h3 id="spwTitle">Create Payout</h3>
            <ol class="spw-steps" id="spwSteps">
                <li class="active" data-step="1"><span>1</span> Filters</li>
                <li data-step="2"><span>2</span> Select Orders</li>
                <li data-step="3"><span>3</span> Review</li>
            </ol>
        </div>

        <!-- Body -->
        <div class="spw-body">
            <!-- STEP 1: FILTERS -->
            <section class="spw-step" data-step="1">
                <div class="spw-grid">
                    <div class="spw-field">
                        <label>Merchant</label>
                        <select id="spwMerchant">
                            <option value="">All Merchants</option>
                            <option value="Stellar Apartments">Stellar Apartments</option>
                            <option value="Urban Estates">Urban Estates</option>
                            <option value="Green Valley Condos">Green Valley Condos</option>
                        </select>
                    </div>

                    <div class="spw-field">
                        <label>From</label>
                        <input type="date" id="spwFrom">
                    </div>

                    <div class="spw-field">
                        <label>To</label>
                        <input type="date" id="spwTo">
                    </div>

                    <div class="spw-field">
                        <label>Minimum Age (days)</label>
                        <input type="number" id="spwAge" min="0" step="1" placeholder="e.g., 3">
                    </div>
                </div>

                <div class="spw-actions right">
                    <button class="btn btn-light" id="spwCancel1">Cancel</button>
                    <button class="btn btn-primary" id="spwNext1">Next</button>
                </div>
            </section>

            <!-- STEP 2: SELECT ORDERS -->
            <section class="spw-step hidden" data-step="2">
                <div class="spw-toolbar">
                    <div class="spw-left">
                        <label class="spw-check">
                            <input type="checkbox" id="spwSelectAll">
                            <span>Select all</span>
                        </label>
                    </div>
                    <div class="spw-right">
                        <span class="muted">Eligible orders:</span>
                        <strong id="spwEligibleCount">0</strong>
                    </div>
                </div>

                <div class="DTTableWrap">
                    <table class="DTTable w-full">
                        <thead>
                            <tr class="DTHMain">
                                <th style="width:38px;"></th>
                                <th>Order ID</th>
                                <th>Merchant</th>
                                <th>Apartment</th>
                                <th>Paid Date</th>
                                <th class="mono">Amount</th>
                            </tr>
                        </thead>
                        <tbody id="spwOrdersBody">
                            <!-- JS renders rows -->
                        </tbody>
                    </table>
                </div>

                <div class="spw-summary">
                    <div><span class="muted">Selected:</span> <strong id="spwSelCount">0</strong> orders</div>
                    <div><span class="muted">Gross:</span> <strong class="mono" id="spwGross">₦0</strong></div>
                    <div><span class="muted">Fees:</span> <strong class="mono" id="spwFees">₦0</strong></div>
                    <div><span class="muted">Net Payable:</span> <strong class="mono" id="spwNet">₦0</strong></div>
                </div>

                <div class="spw-actions between">
                    <button class="btn btn-light" id="spwBack2">Back</button>
                    <div class="flex gap-2">
                        <button class="btn btn-light" id="spwCancel2">Cancel</button>
                        <button class="btn btn-primary" id="spwNext2" disabled>Next</button>
                    </div>
                </div>
            </section>

            <!-- STEP 3: REVIEW -->
            <section class="spw-step hidden" data-step="3">
                <div class="spw-review">
                    <div class="card">
                        <div class="card-h"><h4>Batch Summary</h4></div>
                        <div class="stack">
                            <div class="stack-row"><span>Merchants</span><span id="spwReviewMerchants">—</span></div>
                            <div class="stack-row"><span>Orders</span><span id="spwReviewOrders">—</span></div>
                            <div class="stack-row"><span>Gross</span><span class="mono" id="spwReviewGross">₦0</span></div>
                            <div class="stack-row"><span>Fees</span><span class="mono" id="spwReviewFees">₦0</span></div>
                            <div class="stack-row total"><span>Net Payable</span><span class="mono" id="spwReviewNet">₦0</span></div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-h"><h4>Payment Details</h4></div>
                        <div class="spw-grid">
                            <div class="spw-field">
                                <label>Method</label>
                                <select id="spwMethod">
                                    <option value="Manual Bank Transfer">Manual Bank Transfer</option>
                                    <option value="Paystack Transfer">Paystack Transfer</option>
                                </select>
                            </div>
                            <div class="spw-field">
                                <label>Reference</label>
                                <input type="text" id="spwRef" placeholder="e.g., TRX-PAYOUT-8921">
                            </div>
                            <div class="spw-field spw-full">
                                <label>Notes</label>
                                <input type="text" id="spwNotes" placeholder="Optional notes…">
                            </div>
                        </div>
                    </div>
                </div>

                <div class="spw-actions between">
                    <button class="btn btn-light" id="spwBack3">Back</button>
                    <div class="flex gap-2">
                        <button class="btn btn-light" id="spwCancel3">Cancel</button>
                        <button class="btn btn-primary" id="spwConfirm">Create Batch</button>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>




<style>
   
:root {
  --ink: #0f172a;
  --muted: #64748b;
  --bd: #e9edf4;
  --bd-strong: #dfe6f1;
  --bg: #ffffff;
  --chip: #f1f5f9;
  --primary: #0ea5e9;
  --primary-600: #0284c7;
  --success: #16a34a;
  --warning: #f59e0b;
  --danger: #dc2626;
  --slate: #94a3b8;
  --shadow-1: 0 8px 24px rgba(15, 23, 42, .08);
  --shadow-2: 0 16px 40px rgba(2, 6, 23, .12);
  --radius-lg: 14px;
  --radius-md: 10px;
  --radius-sm: 8px;
  --mono: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;
  --trans: .15s ease;
}

/* ============ Generic utilities ============ */
.mono{font-family:var(--mono)}
.muted{color:var(--muted)}
.flex{display:flex}
.gap-2{gap:.5rem}

/* ============ Buttons ============ */
.btn {
  height: 36px;
  padding: 0 14px;
  border-radius: var(--radius-md);
  border: 1px solid var(--bd);
  background: #fff;
  color: var(--ink);
  font-weight: 600;
  cursor: pointer;
  transition: background var(--trans), border-color var(--trans), transform .06s ease;
}
.btn:hover { background: #f8fafc; }
.btn:active { transform: translateY(1px); }

.btn-primary {
  background: var(--primary);
  border-color: var(--primary);
  color: #fff;
}
.btn-primary:hover { background: var(--primary-600); border-color: var(--primary-600); }

.btn-soft-info {
  background: #eef6ff;
  border-color: #d7e9ff;
  color: #1d4ed8;
}
.btn-light { background:#fff; }
.btn-danger { background: var(--danger); border-color: var(--danger); color:#fff; }
.btn-danger:hover { background:#b91c1c; border-color:#b91c1c; }

/* Icon-only 3-dots */
.icon-dot{
  width:32px;height:32px;border-radius:8px;border:1px solid var(--bd);
  background:#fff;cursor:pointer;font-size:18px;line-height:30px;text-align:center;
}
.icon-dot:hover{background:#f8fafc}

/* ============ Chips / Status pills ============ */
.chip{
  display:inline-flex;align-items:center;gap:.4rem;
  padding:.25rem .6rem;border-radius:999px;border:1px solid var(--bd);
  background:var(--chip);font-weight:700;font-size:.75rem;color:#334155;
}
.chip-paid{ background:#e8fff1; border-color:#ccf3db; color:#117B34; }
.chip-pending{ background:#fff8e6; border-color:#ffe4b3; color:#a16207; }
.chip-failed{ background:#ffe8e8; border-color:#ffcfcf; color:#b91c1c; }
.chip-open{ background:#eef6ff; border-color:#d7e9ff; color:#1d4ed8; }
.chip-cancel{ background:#f1f5f9; border-color:#e2e8f0; color:#475569; }

/* =========================================================
   Settlements / Payouts — LIST page
   ========================================================= */
.DashboardTableContainerE{
  background: var(--bg);
  border: 1px solid var(--bd);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-1);
  overflow: hidden;
}

/* Header row with title + actions */
.DashboardTableContainerE .DTH{
  display:flex;align-items:center;justify-content:space-between;
  gap:12px;padding:14px 16px;border-bottom:1px solid var(--bd);
}
.DashboardTableContainerE .DTH h5{margin:0;font-size:16px;font-weight:800}

/* Filters block */
.DTFilters{border-bottom:1px solid var(--bd);background:#fbfdff}
.DTFilterRow{
  display:grid;grid-template-columns: repeat(6, minmax(0,1fr));
  gap:12px;padding:12px 16px;
}
.DTField label{
  display:block;font-size:12px;color:var(--muted);margin-bottom:6px;
}
.DTField input,.DTField select{
  width:100%;height:38px;border:1px solid #d0d5dd;border-radius:var(--radius-md);
  background:#fff;padding:0 10px;transition:border-color var(--trans), box-shadow var(--trans);
}
.DTField input:focus,.DTField select:focus{
  border-color:var(--primary);box-shadow:0 0 0 3px color-mix(in srgb, var(--primary) 18%, transparent);
}
.DTButtons{display:flex;gap:8px;align-items:flex-end}



/* Table wrapper */
.DTTableWrap{width:100%;overflow:auto}
.DTTable{border-collapse:separate;border-spacing:0;width:100%}

/* Table head */
.DTHMain th{
  text-align:left;font-size:12px;color:#5b6b7e;font-weight:700;
  padding:12px 16px;border-bottom:1px solid var(--bd-strong);white-space:nowrap;background:#fafcff;
}

/* Table body */
.DTTable td{
  padding:12px 16px;border-bottom:1px solid var(--bd);
  vertical-align:middle;font-size:14px;color:#1f2937;
}
.DTTable tbody tr:hover{ background:#fbfdff; }

/* Clickable rows */
.DTClickable{cursor:pointer}
.DTClickable:hover{ background:#f8fbff; }

/* Rightmost action column */
.DTActionCol{ width:64px; text-align:right; }
.DTActionCol .manual-dropdown{ position:relative; display:inline-block; }
.manual-dropdown .dd-menu{
  position:absolute; right:0; top:110%; min-width:11rem;
  background:#fff;border:1px solid var(--bd);border-radius:var(--radius-md);
  box-shadow: var(--shadow-2);display:none;z-index:60;overflow:hidden;
}
.manual-dropdown .dd-menu.show{ display:block; }
.manual-dropdown .dd-item{
  display:block;padding:.6rem .8rem;background:#fff;color:#334155;
  font-size:14px;border:0;width:100%;text-align:left;cursor:pointer;
}
.manual-dropdown .dd-item:hover{ background:#f8fafc; }

/* Numeric alignment */
.DTTable .mono{ font-family: var(--mono); }

/* =========================================================
   Batch Details page (OBD: Order/Booking/Detail layout reused)
   ========================================================= */
.OBD{--card: #fff; margin-top: 10px;}
.OBD .obd-head{
  display:flex;align-items:flex-start;justify-content:space-between;gap:16px;
  margin-bottom:10px;
}
.OBD .obd-kicker{font-size:12px;color:#64748b;text-transform:uppercase;letter-spacing:.04em}
.OBD .obd-title{font-size:24px;font-weight:800;margin:2px 0}
.OBD .obd-sub{font-size:13px;color:var(--muted)}
.OBD .obd-actions{display:flex;gap:8px;flex-wrap:wrap}

.OBD .obd-chips{display:flex;gap:8px;flex-wrap:wrap;margin:8px 0 14px}

/* Two-column content grid */
.OBD .obd-grid{
  display:grid;grid-template-columns:1.15fr .85fr;gap:14px;
}


.OBD .obd-col{ display:grid; gap:14px; }

/* Card */
.OBD .card{
  background:var(--card);border:1px solid var(--bd);
  border-radius:var(--radius-lg);padding:14px 14px 10px;box-shadow: var(--shadow-1);
}
.OBD .card-h{display:flex;align-items:center;justify-content:space-between;margin-bottom:8px}
.OBD .card h3{font-size:16px;margin:0;font-weight:700}

/* KPI strip inside a card header */
.OBD .kpi-row{display:flex;gap:14px;flex-wrap:wrap}
.OBD .kpi-title{display:block;font-size:11px;color:#6b7280}
.OBD .kpi-value{display:block;font-weight:800}
.OBD .kpi-value.green{color:#117B34}

/* Stack list (summary/prices) */
.OBD .stack{display:grid;gap:8px}
.OBD .stack-row{display:flex;justify-content:space-between;align-items:center;font-size:14px}
.OBD .stack-row.total{border-top:1px dashed var(--bd);padding-top:10px;font-weight:800}

/* Info list (key/value) */
.OBD .info{display:grid;gap:8px}
.OBD .info-row{display:flex;justify-content:space-between;gap:16px}
.OBD .info-row .link{color:#2563eb;text-decoration:none;cursor:pointer}
.OBD .info-row .link:hover{text-decoration:underline}

/* Timeline */
.OBD .timeline{list-style:none;margin:0;padding:0}
.OBD .timeline li{display:flex;gap:10px;position:relative;padding:8px 0}
.OBD .tl-dot{width:10px;height:10px;border-radius:999px;background:#94a3b8;margin-top:5px}
.OBD .tl-ok{background:var(--success)}
.OBD .tl-block{flex:1}
.OBD .tl-title{font-weight:700}
.OBD .tl-sub{font-size:13px;color:var(--muted)}

/* Reuse your table styles inside cards on details page */
.OBD .DTTableWrap{border:1px solid var(--bd);border-radius:var(--radius-md);overflow:auto}
.OBD .DTTable thead th{background:#fafcff}

/* =================== Modal base (reusable) =================== */
.obd-overlay{
  position:fixed;inset:0;background:rgba(2,6,23,.45);
  display:none;align-items:center;justify-content:center;padding:16px;z-index:9999;
}
.obd-overlay.show{ display:flex; }
.obd-modal{
  width:100%;max-width:520px;background:#fff;border:1px solid var(--bd);
  border-radius:var(--radius-lg);box-shadow:var(--shadow-2);padding:16px 16px 12px;position:relative;
}
.modal-close{
  position:absolute;right:16px;top:12px;width:30px;height:30px;border:1px solid var(--bd);
  border-radius:var(--radius-sm);background:#fff;cursor:pointer;
}
.refund-form{display:grid;gap:10px;margin-top:8px}
.rf-row{display:grid;gap:6px}
.rf-row input,.rf-row select{
  height:38px;border:1px solid #d0d5dd;border-radius:var(--radius-md);padding:0 10px;
}
.rf-actions{display:flex;gap:8px;justify-content:flex-end;margin-top:6px}
/* ===== Create Payout Wizard (scoped as spw-*) ===== */
.spw-overlay{
  position:fixed; inset:0; background:rgba(2,6,23,.45);
  display:none; align-items:center; justify-content:center; padding:16px; z-index:9999;
}
.spw-overlay.show{ display:flex; }
.spw-modal{
  width:100%; max-width:980px; background:#fff; border:1px solid #e9edf4;
  border-radius:14px; box-shadow:0 20px 48px rgba(2,6,23,.18);
  position:relative; padding:14px 14px 10px;
}
.spw-close{
  position:absolute; right:12px; top:10px; width:32px; height:32px;
  border:1px solid #e5e7eb; border-radius:8px; background:#fff; cursor:pointer;
}
.spw-head{ display:flex; align-items:center; justify-content:space-between; gap:12px; padding:6px 4px 10px; }
.spw-head h3{ margin:0; font-size:18px; font-weight:800; }
.spw-steps{ list-style:none; display:flex; gap:10px; margin:0; padding:0; }
.spw-steps li{ display:flex; align-items:center; gap:6px; padding:6px 10px; border:1px solid #e9edf4; border-radius:999px; font-weight:700; color:#475569; }
.spw-steps li span{ width:20px; height:20px; border-radius:999px; display:inline-grid; place-items:center; background:#f1f5f9; font-size:12px; }
.spw-steps li.active{ background:#eef6ff; border-color:#d7e9ff; color:#1d4ed8; }
.spw-body{ display:block; }

.spw-step.hidden{ display:none; }

/* Fields / grid */
.spw-grid{ display:grid; grid-template-columns: 1fr 1fr 1fr 1fr; gap:12px; }
.spw-full{ grid-column: 1 / -1; }


.spw-field label{ display:block; font-size:12px; color:#667085; margin-bottom:6px; }
.spw-field input, .spw-field select{
  height:38px; border:1px solid #d0d5dd; border-radius:10px; padding:0 10px; width:100%;
}
.spw-field input:focus, .spw-field select:focus{
  border-color:#0ea5e9; box-shadow:0 0 0 3px rgba(14,165,233,.22); outline:0;
}

/* Toolbar / summary */
.spw-toolbar{ display:flex; align-items:center; justify-content:space-between; margin:8px 0; }
.spw-check{ display:inline-flex; align-items:center; gap:8px; user-select:none; }
.spw-summary{ display:flex; gap:16px; justify-content:flex-end; padding:8px 0; }
.spw-summary .mono{ font-weight:800; }

/* Actions */
.spw-actions{ display:flex; gap:8px; margin-top:10px; }
.spw-actions.right{ justify-content:flex-end; }
.spw-actions.between{ justify-content:space-between; }

/* Cards / stack reused */
.card{ background:#fff; border:1px solid #e9edf4; border-radius:14px; padding:12px; }
.card-h{ display:flex; align-items:center; justify-content:space-between; margin-bottom:8px; }
.card h4{ margin:0; font-size:16px; font-weight:700; }
.stack{ display:grid; gap:8px; }
.stack-row{ display:flex; justify-content:space-between; align-items:center; }
.stack-row.total{ border-top:1px dashed #e9edf4; padding-top:8px; font-weight:800; }

/* Reuse DTTable styles already on page */
.DTTableWrap{ border:1px solid #e9edf4; border-radius:10px; overflow:auto; }
.DTTable thead th{ background:#fafcff; }

</style>

<script>
    // Row click → navigate (but ignore clicks inside Actions)
    document.addEventListener('click', (e) => {
      const row = e.target.closest('tr.DTClickable');
      if (!row) return;
      if (e.target.closest('.DTActionCol')) return;
      const href = row.getAttribute('data-href');
      if (href) window.location.href = href;
    });

    // 3-dots dropdowns
    (function () {
      function closeAll(except) {
        document.querySelectorAll('.manual-dropdown .dd-menu.show')
          .forEach(m => { if (m !== except) m.classList.remove('show'); });
      }
      document.addEventListener('click', (e) => {
        const btn = e.target.closest('[data-dd-button], .icon-dot');
        if (btn) {
          const menu = btn.parentElement.querySelector('.dd-menu');
          const isOpen = menu.classList.contains('show');
          closeAll();
          if (!isOpen) menu.classList.add('show');
          e.stopPropagation();
          return;
        }
        if (!e.target.closest('.manual-dropdown')) closeAll();
      });
      document.addEventListener('keydown', (e) => e.key === 'Escape' &&
        document.querySelectorAll('.manual-dropdown .dd-menu.show')
          .forEach(m => m.classList.remove('show')));
    })();
</script>
<script>
(function(){
  // ---------- Demo data (replace later with API) ----------
  const allOrders = [
    { id:'ORD-12001', merchant:'Stellar Apartments', apt:'Unit A12', paid:'2025-08-12', amount:245000 },
    { id:'ORD-12002', merchant:'Green Valley Condos', apt:'Studio 2B', paid:'2025-08-12', amount:192000 },
    { id:'ORD-12003', merchant:'Urban Estates', apt:'Loft C9', paid:'2025-08-11', amount:300000 },
    { id:'ORD-11984', merchant:'Stellar Apartments', apt:'Unit A07', paid:'2025-08-09', amount:210000 },
    { id:'ORD-11972', merchant:'Urban Estates', apt:'Suite D3', paid:'2025-08-08', amount:275000 },
  ];

  // ---------- Elements ----------
  const overlay = document.getElementById('spwOverlay');
  const openBtn = document.getElementById('openCreatePayout');
  const closeBtn = document.getElementById('spwClose');

  const steps = document.querySelectorAll('.spw-step');
  const stepChips = document.querySelectorAll('.spw-steps li');

  // Step 1
  const fMerchant = document.getElementById('spwMerchant');
  const fFrom = document.getElementById('spwFrom');
  const fTo = document.getElementById('spwTo');
  const fAge = document.getElementById('spwAge');
  const next1 = document.getElementById('spwNext1');
  const cancel1 = document.getElementById('spwCancel1');

  // Step 2
  const tbody = document.getElementById('spwOrdersBody');
  const selectAll = document.getElementById('spwSelectAll');
  const eligibleCount = document.getElementById('spwEligibleCount');
  const selCount = document.getElementById('spwSelCount');
  const grossEl = document.getElementById('spwGross');
  const feesEl = document.getElementById('spwFees');
  const netEl = document.getElementById('spwNet');
  const back2 = document.getElementById('spwBack2');
  const cancel2 = document.getElementById('spwCancel2');
  const next2 = document.getElementById('spwNext2');

  // Step 3
  const back3 = document.getElementById('spwBack3');
  const cancel3 = document.getElementById('spwCancel3');
  const confirm = document.getElementById('spwConfirm');
  const reviewMerchants = document.getElementById('spwReviewMerchants');
  const reviewOrders = document.getElementById('spwReviewOrders');
  const reviewGross = document.getElementById('spwReviewGross');
  const reviewFees = document.getElementById('spwReviewFees');
  const reviewNet = document.getElementById('spwReviewNet');
  const method = document.getElementById('spwMethod');
  const ref = document.getElementById('spwRef');
  const notes = document.getElementById('spwNotes');

  // ---------- State ----------
  let filtered = [];
  let selectedIds = new Set();

  // ---------- Helpers ----------
  function openModal(){
    overlay.classList.add('show');
    document.body.style.overflow = 'hidden';
    goToStep(1);
  }
  function closeModal(){
    overlay.classList.remove('show');
    document.body.style.overflow = '';
    // reset a bit
    selectedIds.clear();
    selectAll.checked = false;
    tbody.innerHTML = '';
    eligibleCount.textContent = '0';
    selCount.textContent = '0';
    grossEl.textContent = '₦0'; feesEl.textContent = '₦0'; netEl.textContent = '₦0';
  }
  function goToStep(n){
    steps.forEach(s => s.classList.toggle('hidden', s.getAttribute('data-step') !== String(n)));
    stepChips.forEach(c => c.classList.toggle('active', c.getAttribute('data-step') === String(n)));
  }
  function naira(n){ return '₦' + n.toLocaleString('en-NG'); }

  function parseDate(s){ return s ? new Date(s + 'T00:00:00') : null; }
  function daysBetween(a,b){ return Math.floor((b - a)/(1000*60*60*24)); }

  function runFilters(){
    const m = fMerchant.value;
    const from = parseDate(fFrom.value);
    const to = parseDate(fTo.value);
    const minAge = Number(fAge.value || 0);

    const today = new Date();
    filtered = allOrders.filter(o => {
      if (m && o.merchant !== m) return false;
      const paid = parseDate(o.paid);
      if (from && paid < from) return false;
      if (to && paid > to) return false;
      const age = daysBetween(paid, today);
      if (minAge && age < minAge) return false;
      return true;
    });
  }

  function renderOrders(){
    tbody.innerHTML = '';
    filtered.forEach(o => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td><input type="checkbox" class="spw-row-chk" data-id="${o.id}"></td>
        <td>${o.id}</td>
        <td>${o.merchant}</td>
        <td>${o.apt}</td>
        <td class="muted">${o.paid}</td>
        <td class="mono">${naira(o.amount)}</td>
      `;
      tbody.appendChild(tr);
    });
    eligibleCount.textContent = String(filtered.length);
  }

  function recalcTotals(){
    let gross = 0;
    const merchants = new Set();
    let count = 0;
    filtered.forEach(o => {
      if (selectedIds.has(o.id)) {
        count++;
        gross += o.amount;
        merchants.add(o.merchant);
      }
    });
    const fees = 0; // adjust later if you have fees
    const net = gross - fees;
    selCount.textContent = String(count);
    grossEl.textContent = naira(gross);
    feesEl.textContent = naira(fees);
    netEl.textContent = naira(net);

    // populate review
    reviewMerchants.textContent = merchants.size.toString();
    reviewOrders.textContent = count.toString();
    reviewGross.textContent = naira(gross);
    reviewFees.textContent = naira(fees);
    reviewNet.textContent = naira(net);

    // enable/disable Next
    next2.disabled = count === 0;
  }

  // ---------- Events ----------
  openBtn?.addEventListener('click', openModal);
  closeBtn?.addEventListener('click', closeModal);
  overlay.addEventListener('click', (e)=>{ if(e.target === overlay) closeModal(); });
  document.addEventListener('keydown', e => { if (e.key === 'Escape' && overlay.classList.contains('show')) closeModal(); });

  // Step 1
  next1.addEventListener('click', () => {
    // simple validation: From <= To (if both set)
    if (fFrom.value && fTo.value && new Date(fFrom.value) > new Date(fTo.value)) {
      alert('The "From" date cannot be after the "To" date.');
      return;
    }
    runFilters();
    renderOrders();
    selectedIds.clear();
    selectAll.checked = false;
    recalcTotals();
    goToStep(2);
  });
  cancel1.addEventListener('click', closeModal);

  // Step 2
  back2.addEventListener('click', ()=> goToStep(1));
  cancel2.addEventListener('click', closeModal);

  selectAll.addEventListener('change', (e)=>{
    const checked = e.target.checked;
    document.querySelectorAll('.spw-row-chk').forEach(chk => {
      chk.checked = checked;
      const id = chk.getAttribute('data-id');
      if (checked) selectedIds.add(id); else selectedIds.delete(id);
    });
    recalcTotals();
  });

  tbody.addEventListener('change', (e)=>{
    const chk = e.target.closest('.spw-row-chk');
    if (!chk) return;
    const id = chk.getAttribute('data-id');
    if (chk.checked) selectedIds.add(id); else selectedIds.delete(id);

    // update select-all
    const all = [...document.querySelectorAll('.spw-row-chk')];
    const allChecked = all.length && all.every(c => c.checked);
    selectAll.checked = allChecked;

    recalcTotals();
  });

  next2.addEventListener('click', ()=> goToStep(3));

  // Step 3
  back3.addEventListener('click', ()=> goToStep(2));
  cancel3.addEventListener('click', closeModal);

  confirm.addEventListener('click', ()=>{
    // Build payload stub
    const payload = {
      filters: {
        merchant: fMerchant.value || null,
        from: fFrom.value || null,
        to: fTo.value || null,
        minAgeDays: fAge.value || 0
      },
      orders: filtered.filter(o => selectedIds.has(o.id)),
      payment: {
        method: method.value,
        reference: ref.value.trim(),
        notes: notes.value.trim()
      }
    };
    console.log('Create Payout payload:', payload);
    // TODO: call your endpoint; then close and show toast
    confirm.disabled = true; confirm.textContent = 'Creating…';
    setTimeout(()=>{ // demo
      confirm.disabled = false; confirm.textContent = 'Create Batch';
      closeModal();
      alert('Payout batch created (demo). Check console for payload.');
    }, 900);
  });
})();
</script>
